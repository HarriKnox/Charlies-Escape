#BlueJ class context
comment0.params=
comment0.target=void\ act()
comment0.text=\n\t\tOn\ every\ game\ tick,\ the\ Physics\ will\ change\ the\ Y\ velocity\ by\ the\ value\ of\ gravity\n\t\t(same\ as\ how\ gravity\ works\ in\ the\ real\ world).\ After\ it\ changes\ your\ y\ velocity\ to\n\t\tbe\ more\ down,\ it\ checks\ your\ trajectory\ to\ see\ if\ you're\ going\ to\ collide\ with\n\t\tanything.\ If\ you\ are\ going\ to\ collide\ with\ anything,\ the\ checkTrajectory()\ method\n\t\twill\ set\ your\ X\ and\ Y\ velocities\ accordingly\ so\ you\ don't\ go\ through\ said\ objects.\n\t\tThen\ it\ will\ change\ the\ object's\ location\ by\ adding\ the\ X/Y\ velocity\ to\ the\n\t\tobject's\ X/Y\ position.\n
comment1.params=
comment1.target=int\ getGravity()
comment1.text=\n\t\tThe\ magnitude\ of\ acceleration\ due\ to\ gravity.\n\t\tSince\ Y\ increases\ as\ you\ go\ down,\ gravity\ is\ positive.\n\t\tThis\ should\ be,\ and\ will\ remain,\ static.\n
comment10.params=num
comment10.target=int\ round(double)
comment10.text=Returns\ the\ number\ rounded\ away\ from\ zero\ to\ the\ nearest\ integer.
comment11.params=num
comment11.target=int\ abs(int)
comment11.text=Returns\ the\ absolute\ value\ of\ a\ number
comment12.params=num
comment12.target=double\ abs(double)
comment12.text=Returns\ the\ absolute\ value\ of\ a\ number
comment13.params=first\ second
comment13.target=int\ max(int,\ int)
comment13.text=Returns\ the\ larger\ of\ two\ numbers
comment14.params=mag\ sign
comment14.target=int\ copySign(int,\ int)
comment14.text=Same\ as\ Math.copySign,\ but\ works\ with\ integers\ without\ needing\ to\ cast\ to\ float/double.
comment2.params=xvel
comment2.target=void\ setXVelocity(int)
comment2.text=Sets\ X\ velocity
comment3.params=yvel
comment3.target=void\ setYVelocity(int)
comment3.text=Sets\ Y\ velocity
comment4.params=deltaX
comment4.target=void\ changeXVelocity(int)
comment4.text=Changes\ X\ velocity\ by\ passed\ value
comment5.params=deltaY
comment5.target=void\ changeYVelocity(int)
comment5.text=Changes\ Y\ velocity\ by\ passed\ value
comment6.params=
comment6.target=int\ getXVelocity()
comment6.text=Returns\ X\ velocity
comment7.params=
comment7.target=int\ getYVelocity()
comment7.text=Returns\ Y\ velocity
comment8.params=
comment8.target=boolean\ onGround()
comment8.text=Returns\ whether\ it's\ on\ the\ ground
comment9.params=
comment9.target=void\ checkTrajectory()
comment9.text=\n\t\tFollows\ the\ path\ that\ the\ object\ will\ travel\ and\ calculates\ collisions.\n\t\tThis\ uses\ a\ modified\ Bresenham\ Line\ algorithm\ to\ calculate\ the\ trajectory\ every\ game-tick.\n\t\t\n\t\t\u00A1\u00A1DO\ NOT\ TOUCH\!\!\n\t\tHarrison\ Knox\n
numComments=15
